{{/*
   * Copyright 2022 Open Ag Data Alliance
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */}}
{{- $tag := default .Chart.AppVersion .Values.oada.tag -}}
{{- range $k, $v := .Values.oada.services -}}
{{/* Deploy the OADA uservice `$k` */}}
{{- $name := print $k "-" $.Release.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $.Release.Namespace }}
  name: {{ $name }}
  labels:
    app.kubernetes.io/component: {{ $k }}
    {{- include "oada.chart.labels" $ | nindent 4 }}
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ $k }}
      {{- include "oada.chart.selectorLabels" $ | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: {{ $k }}
        {{- include "oada.chart.selectorLabels" $ | nindent 8 }}
    spec:
      serviceAccountName: service-account-{{ $.Release.Name }}
      initContainers:
        - name: wait-for-init
          image: {{ $.Values.k8sWaitFor.image }}:{{ $.Values.k8sWaitFor.tag }}
          args:
            - job
            - init-{{ $.Release.Name }}
          resources:
            limits: {{- toYaml $.Values.k8sWaitFor.resources.limits | nindent 14 }}
            requests: {{- toYaml $.Values.k8sWaitFor.resources.limits | nindent 14 }}
      containers:
        - envFrom:
            - configMapRef:
                name: {{ $.Chart.Name }}-configmap-{{ $.Release.Name }}
          env:
            - name: CONFIG
              value: /oada.config.mjs
            {{ if eq $k "auth" -}}
            - name: AUTH_KEY_CODE
              value: /etc/auth/code_key
            - name: AUTH_KEY_TOKEN
              value: /etc/auth/token_key.pem
            - name: AUTH_KEY_ID_TOKEN
              value: /etc/auth/id_token_key.pem
            {{ end -}}
            - name: ARANGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "oada.arango.rootPassword" $ }}
                  key: username
                  optional: {{ $.Values.global.development }}
            - name: ARANGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "oada.arango.rootPassword" $ }}
                  key: password
                  optional: {{ $.Values.global.development }}
          image: {{ print "oada/" $k ":" $tag }}
          imagePullPolicy: {{ $.Values.oada.imagePullPolicy }}
          command: ["/usr/bin/dumb-init", "--rewrite", "15:2", "--", "/bin/sh"]
          args: ["-c", "yarn workspace @oada/{{ $k }} run start"]
          # TODO: Better liveness checks
          livenessProbe:
            httpGet:
              port: prometheus
            initialDelaySeconds: 10
            periodSeconds: 10
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000 # run as user node (uid 1000)
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          name: {{ $name }}
          resources:
            {{- toYaml $.Values.oada.resources | nindent 12 }}
          ports:
            {{ if $v.http -}}
            - name: http
              containerPort: 8080
            {{- end }}
            {{ if $.Values.global.development -}}
            - name: inspect
              containerPort: 9229
            {{- end }}
            - name: prometheus
              containerPort: 3000
          volumeMounts:
            {{ if eq $k "http-handler" -}}
            - mountPath: /oada/binary
              name: binary-data
            {{ end -}}
            {{ if eq $k "auth" -}}
            - mountPath: /etc/auth
              name: keys
              readOnly: true
            {{ end -}}
            - mountPath: /tmp
              name: tmp
      volumes:
        {{ if eq $k "http-handler" -}}
        - name: binary-data
          persistentVolumeClaim:
            claimName: binary-data-{{ $.Release.Name }}
        {{ end -}}
        {{ if eq $k "auth" -}}
        - name: keys
          secret:
            secretName: auth-keys-{{ $.Release.Name }}
            optional: true
        {{ end -}}
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
            #medium: Memory
      restartPolicy: Always
{{- if $.Values.autoscaling.enabled }}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  namespace: {{ $.Release.Namespace }}
  name: {{ $name }}
  labels:
    app.kubernetes.io/component: {{ $k }}
    {{- include "oada.chart.labels" $ | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ $name }}
  minReplicas: {{ $.Values.autoscaling.minReplicas }}
  maxReplicas: {{ $.Values.autoscaling.maxReplicas }}
  metrics:
    {{- if $.Values.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: {{ $.Values.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if $.Values.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: {{ $.Values.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}
{{- if eq (include "oada.prometheus" $) "true" }}
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  namespace: {{ $.Release.Namespace }}
  name: {{ $name }}
  labels:
    app.kubernetes.io/component: {{ $k }}
    {{- include "oada.chart.labels" $ | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ $k }}
      {{- include "oada.chart.selectorLabels" $ | nindent 6 }}
  podMetricsEndpoints:
  - port: prometheus
  namespaceSelector:
    any: false
{{- end }}
---
{{ end -}}