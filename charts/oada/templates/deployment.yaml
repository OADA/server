{{/*
   * Copyright 2022 Open Ag Data Alliance
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */}}
{{- range $k, $v := .Values.oada.services -}}
{{/* Deploy the OADA uservice `$k` */}}
{{- $name := print $k "-" $.Release.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $.Release.Namespace }}
  name: {{ $name }}
  labels:
    app.kubernetes.io/name: {{ $k }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    {{- include "oada.chart.labels" $ | nindent 4 }}
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $k }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $k }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      serviceAccountName: service-account-{{ $.Release.Name }}
      initContainers:
        - name: wait-for-init
          image: {{ $.Values.k8sWaitFor.image }}:{{ $.Values.k8sWaitFor.tag }}
          args:
            - job
            - init-{{ $.Release.Name }}
      containers:
        - envFrom:
            - configMapRef:
                name: {{ $.Chart.Name }}-configmap-{{ $.Release.Name }}
          image: {{ print "oada/" $k ":" $.Values.oada.tag }}
          #imagePullPolicy: {{ $.Values.global.development | ternary "Always" "IfNotPresent" }}
          command: ["/usr/bin/dumb-init", "--rewrite", "15:2", "--", "/bin/sh"]
          args: ["-c", "yarn workspace @oada/{{ $k }} run start"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000 # run as user node (uid 1000)
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          name: {{ $name }}
          resources:
            {{- toYaml $.Values.oada.resources | nindent 12 }}
          {{ if $v.http -}}
          ports:
            - containerPort: 8080
          {{ end -}}
          volumeMounts:
            {{ if eq $k "http-handler" -}}
            - mountPath: /oada/binary
              name: binary-data-{{ $.Release.Name }}
            {{ end -}}
            - mountPath: /tmp
              name: tmp
      volumes:
        {{ if eq $k "http-handler" -}}
        - name: binary-data-{{ $.Release.Name }}
        {{ end -}}
        - name: tmp
          emptyDir:
            medium: Memory
      restartPolicy: Always
{{- if $.Values.autoscaling.enabled }}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  namespace: {{ $.Release.Namespace }}
  name: {{ $name }}
  labels:
    app.kubernetes.io/name: {{ $k }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    {{- include "oada.chart.labels" $ | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ $name }}
  minReplicas: {{ $.Values.autoscaling.minReplicas }}
  maxReplicas: {{ $.Values.autoscaling.maxReplicas }}
  metrics:
    {{- if $.Values.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: {{ $.Values.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if $.Values.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: {{ $.Values.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}
---
{{- end -}}