{{/*
   * Copyright 2022 Open Ag Data Alliance
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */}}
{{- range .Values.oada.users -}}
{{- $secretName := print "user-" .name "-" $.Release.Name -}}
apiVersion: v1
kind: Secret
metadata:
  namespace: {{ $.Release.Namespace }}
  name: {{ $secretName }}
  labels:
    app.kubernetes.io/name: {{ $.Chart.Name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    {{- include "oada.chart.labels" $ | nindent 4 }}
stringData:
  {{/* Generate random token */}}
  {{- $token := uuidv4 -}}
  token: {{ $token }}
  header: >
    Authorization: Bearer {{ $token }}
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ $.Release.Namespace }}
  name: user-add-{{ .name }}-{{ $.Release.Name }}
  labels:
    app.kubernetes.io/name: {{ $.Chart.Name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    {{- include "oada.chart.labels" $ | nindent 4 }}
spec:
  backoffLimit: 10
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: service-account-{{ $.Release.Name }}
      initContainers:
        - name: wait-for-init
          image: {{ $.Values.k8sWaitFor.image }}:{{ $.Values.k8sWaitFor.tag }}
          args:
            - job
            - init-{{ $.Release.Name }}
        - name: user-add
          envFrom:
            - configMapRef:
                name: {{ $.Chart.Name }}-configmap-{{ $.Release.Name }}
          image: oada/users:{{ $.Values.oada.tag }}
          #imagePullPolicy: {{ $.Values.global.development | ternary "Always" "IfNotPresent" }}
          command: ["/usr/bin/dumb-init", "--rewrite", "15:2", "--", "/bin/sh"]
          args: ["-c", "yarn workspace @oada/users run add -u {{ .name }} -a {{ .admin | default false }} "]
      containers:
        - name: token-create
          envFrom:
            - configMapRef:
                name: {{ $.Chart.Name }}-configmap-{{ $.Release.Name }}
          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: token
          image: oada/users:{{ $.Values.oada.tag }}
          #imagePullPolicy: {{ $.Values.global.development | ternary "Always" "IfNotPresent" }}
          command: ["/usr/bin/dumb-init", "--rewrite", "15:2", "--", "/bin/sh"]
          args: ["-c", "yarn workspace @oada/auth run token create -u {{ .name }} -s {{ .scope | join "," }} ${TOKEN} "]
{{- end -}}